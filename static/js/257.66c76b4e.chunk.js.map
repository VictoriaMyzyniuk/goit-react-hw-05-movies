{"version":3,"file":"static/js/257.66c76b4e.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const WrapperImg = styled.div`\n  display: flex;\n\n  flex-direction: column;\n`;\n\nexport const Wrapper = styled.div`\n  margin-left: 30px;\n  margin-top: 50px;\n  display: flex;\n  height: 600px;\n  flex-direction: column;\n`;\n\nexport const MainWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledLinkCastAndReview = styled(NavLink)`\n  color: #97055a;\n  font-size: 15px;\n  font-weight: 700;\n  text-decoration: none;\n\n  &.active {\n    color: #c01062;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #f10337;\n  }\n`;\n\nexport const ButtonCardFilm = styled.button`\n  display: inline-block;\n  width: 400px;\n\n  height: 48px;\n\n  position: relative;\n  border: 0;\n  opacity: 0.6;\n  border-radius: 15px;\n  background-color: #fff;\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const Img = styled.img`\n  width: 400px;\n  height: 600px;\n  border-radius: 15px;\n`;\n\nexport const Name = styled.h1`\n  color: #570434;\n  font-size: 50px;\n  font-weight: 700;\n  margin-bottom: 50px;\n`;\n\nexport const Score = styled.p`\n  color: #b9518f;\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 45px;\n  width: 700px;\n  display: flex;\n`;\n\nexport const ScoreTitle = styled.p`\n  color: #570434;\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 30px;\n\n  display: flex;\n  align-items: baseline;\n`;\n\nexport const OverviewGenres = styled.h2`\n  color: #570434;\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 30px;\n`;\nexport const AdditionalItem = styled.li`\n  width: 100px;\n\n  border: 2px solid pink;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px;\n  border-radius: 15px;\n`;\n\nexport const Message = styled.div`\n  text-align: center;\n  color: #570434;\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 30px;\n\n  display: flex;\n  align-items: baseline;\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport * as API from 'services/api';\nimport { useState, useEffect, Suspense } from 'react';\nimport {\n  StyledLinkCastAndReview,\n  Wrapper,\n  ButtonCardFilm,\n  Img,\n  WrapperImg,\n  MainWrapper,\n  Name,\n  Score,\n  OverviewGenres,\n  ScoreTitle,\n  AdditionalList,\n  AdditionalItem,\n  Message,\n} from 'pages/MovieDetails/MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = id => {\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const backLink = location.state?.from ?? '/';\n\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    async function loadFilmById(movieId) {\n      try {\n        const movieResponse = await API.getMovieById(movieId);\n\n        setMovieInfo(movieResponse);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    loadFilmById(movieId);\n  }, [movieId]);\n\n  return (\n    <MainWrapper>\n      {movieInfo && (\n        <>\n          <WrapperImg>\n            <ButtonCardFilm>\n              <StyledLinkCastAndReview to={backLink}>\n                Go back\n              </StyledLinkCastAndReview>\n            </ButtonCardFilm>\n            {movieInfo.poster_path ? (\n              <Img\n                src={`https://image.tmdb.org/t/p/w780${movieInfo.poster_path}`}\n                alt={movieInfo.title}\n              />\n            ) : (\n              <Img\n                src={`https://upload.wikimedia.org/wikipedia/commons/6/6c/No_image_3x4.svg`}\n                alt={movieInfo.title}\n              />\n            )}\n          </WrapperImg>\n          <Wrapper>\n            <Name>\n              {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n            </Name>\n            <ScoreTitle>\n              User Score: &nbsp;\n              {Math.round(movieInfo.vote_average * 10)}%\n            </ScoreTitle>\n\n            <OverviewGenres>Overview</OverviewGenres>\n            <Score>{movieInfo.overview}</Score>\n            <OverviewGenres>Genres</OverviewGenres>\n            <Score>\n              {movieInfo.genres.map(genre => genre.name).join(', ')}\n            </Score>\n            <OverviewGenres>Additional information</OverviewGenres>\n            <AdditionalList>\n              <AdditionalItem>\n                <StyledLinkCastAndReview\n                  to={`/movies/${movieId}/cast`}\n                  state={{ from: backLink }}\n                >\n                  Cast\n                </StyledLinkCastAndReview>\n              </AdditionalItem>\n              <AdditionalItem>\n                <StyledLinkCastAndReview\n                  to={`/movies/${movieId}/reviews`}\n                  state={{ from: backLink }}\n                >\n                  Reviews\n                </StyledLinkCastAndReview>\n              </AdditionalItem>\n            </AdditionalList>\n            <Suspense fallback={<Message>Loading...</Message>}>\n              <Outlet />\n            </Suspense>\n          </Wrapper>\n        </>\n      )}\n    </MainWrapper>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movieInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.array.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd2c21f22a2d4ccc40e22a6b0b1329764';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=eng`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n"],"names":["WrapperImg","styled","Wrapper","MainWrapper","StyledLinkCastAndReview","NavLink","ButtonCardFilm","Img","Name","Score","ScoreTitle","OverviewGenres","AdditionalList","AdditionalItem","Message","id","movieId","useParams","backLink","useLocation","state","from","useState","movieInfo","setMovieInfo","useEffect","API","movieResponse","console","log","message","loadFilmById","to","poster_path","src","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","BASE_URL","KEY","getPopularMovies","axios","response","data","results","getMovieByQuery","query","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}