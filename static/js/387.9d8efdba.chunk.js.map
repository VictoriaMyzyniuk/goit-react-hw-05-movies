{"version":3,"file":"static/js/387.9d8efdba.chunk.js","mappings":"gRAQaA,GANaC,EAAAA,EAAAA,GAAH,oGAMGA,EAAAA,EAAAA,GAAH,gPAaVC,EAAmBD,EAAAA,EAAAA,EAAH,8GAQhBE,EAAaF,EAAAA,EAAAA,EAAH,8G,SCgBvB,EAnCgB,WACd,OAAoCG,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoDF,EAAAA,EAAAA,WAAS,GAA7D,eAAOG,EAAP,KAA2BC,EAA3B,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA8BF,GAA9B,gGAEiCG,EAAAA,GAAoBH,GAFrD,OAEUI,EAFV,OAGIP,EAAcO,GACdL,GAAsB,GAJ1B,gDAMIM,QAAQC,IAAI,KAAMC,SANtB,yDADc,yBAAC,SAAD,2BAUdC,CAAeR,EAChB,GAAE,CAACA,IACsB,IAAtBJ,EAAWa,QAAgBX,GACtB,SAACL,EAAD,yCAGP,wBACGG,EAAWc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7B,OACE,UAACtB,EAAD,YACE,UAACE,EAAD,sBAA2BmB,MAE3B,SAAClB,EAAD,UAAamB,MAHEF,EAMpB,KAGN,C,8LCzCKG,EAAW,gCACXC,EAAM,mCAECC,EAAgB,mCAAG,oGACPC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFb,cACxBG,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,qDAOhBC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,GAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACqEO,IAF/D,cACvBJ,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,sDAQfG,EAAY,mCAAG,WAAMZ,GAAN,uFACHM,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,oBACaI,EADb,kBADG,cACpBG,EADoB,yBAKnBA,EAASC,MALU,2CAAH,sDAQZK,EAAY,mCAAG,WAAMb,GAAN,uFACHM,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,4BACqBI,EADrB,oBADG,cACpBG,EADoB,yBAKnBA,EAASC,KAAKM,MALK,2CAAH,sDAQZC,EAAe,mCAAG,WAAMf,GAAN,uFACNM,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,4BACqBI,EADrB,2BADM,cACvBG,EADuB,yBAKtBA,EAASC,KAAKC,SALQ,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 30px;\n`;\nexport const ReviewItem = styled.li`\n  border: 2px solid pink;\n  display: flex;\n  flex-direction: column;\n  /* align-items: center;\n  justify-content: center; */\n  padding: 15px;\n  width: 800px;\n\n  border-radius: 15px;\n  margin-bottom: 10px;\n`;\n\nexport const ReviewInfoHeader = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  margin-bottom: 10px;\n\n  color: #570434;\n`;\n\nexport const ReviewInfo = styled.p`\n  font-size: 15px;\n  font-weight: 500;\n  margin-bottom: 10px;\n\n  color: #b9518f;\n`;\n","import { useState, useEffect } from 'react';\nimport * as API from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport {\n  ReviewItem,\n  ReviewInfoHeader,\n  ReviewInfo,\n} from 'components/Reviews/Reviews.styled';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [reviewInfo, setReviewInfo] = useState([]);\n  const [isReviewInfoLoaded, setIsReviewInfoLoaded] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadReviewInfo(movieId) {\n      try {\n        const reviewResponse = await API.getMovieReviews(movieId);\n        setReviewInfo(reviewResponse);\n        setIsReviewInfoLoaded(true);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    loadReviewInfo(movieId);\n  }, [movieId]);\n  if (reviewInfo.length === 0 && isReviewInfoLoaded) {\n    return <ReviewInfoHeader>No reviews for this movie</ReviewInfoHeader>;\n  }\n  return (\n    <ul>\n      {reviewInfo.map(({ id, author, content }) => {\n        return (\n          <ReviewItem key={id}>\n            <ReviewInfoHeader>Author: {author}</ReviewInfoHeader>\n\n            <ReviewInfo>{content}</ReviewInfo>\n          </ReviewItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviewInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd2c21f22a2d4ccc40e22a6b0b1329764';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=eng`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n"],"names":["ReviewItem","styled","ReviewInfoHeader","ReviewInfo","useState","reviewInfo","setReviewInfo","isReviewInfoLoaded","setIsReviewInfoLoaded","movieId","useParams","useEffect","API","reviewResponse","console","log","message","loadReviewInfo","length","map","id","author","content","BASE_URL","KEY","getPopularMovies","axios","response","data","results","getMovieByQuery","query","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}