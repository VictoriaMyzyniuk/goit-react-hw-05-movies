{"version":3,"file":"static/js/691.cb1eb5c2.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1200px;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\nexport const Item = styled.li`\n  width: 200px;\n  height: 120px;\n  border: 2px solid pink;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px;\n  border-radius: 15px;\n`;\n\nexport const StyledLinkMovie = styled(NavLink)`\n  color: #97055a;\n  font-size: 15px;\n  font-weight: 700;\n  text-decoration: none;\n\n  &.active {\n    color: #c01062;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #f10337;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  StyledLinkMovie,\n  List,\n  Item,\n} from 'components/MovieList/MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {films.map(({ title, id }) => {\n        return (\n          <Item key={id}>\n            <StyledLinkMovie to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </StyledLinkMovie>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const MoviesHeader = styled.h1`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  color: #c01062;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const MoviesMain = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 30px;\n`;\nexport const FieldEl = styled(Field)`\n  width: 400px;\n  height: 50px;\n  border-radius: 15px;\n  outline-color: pink;\n  border: none;\n  padding: 10px;\n  font-weight: 500;\n  font-size: 20px;\n  color: #a20d64;\n`;\n\nexport const MoviesButton = styled.button`\n  display: inline-block;\n  width: 200px;\n\n  height: 48px;\n\n  position: relative;\n  border: 0;\n  opacity: 0.6;\n  border-radius: 15px;\n  background-color: pink;\n  color: #a20d64;\n  cursor: pointer;\n  outline: none;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const InfoHeader = styled.p`\n  margin-top: 30px;\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  margin-left: 10px;\n  color: #570434;\n`;\n","import * as API from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport {\n  FormEl,\n  FieldEl,\n  MoviesHeader,\n  MoviesMain,\n  MoviesButton,\n  InfoHeader,\n} from 'pages/Movies/Movies.styled';\n\nconst Movies = () => {\n  const [searchedFilms, setSearchedFilms] = useState([]);\n  const [isInfoLoaded, setIsInfoLoaded] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      loadSearchedFilms(query);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function loadSearchedFilms(value) {\n    if (value === '') {\n      return;\n    }\n    try {\n      const receivedSearchedFilms = await API.getMovieByQuery(value);\n      setSearchedFilms(receivedSearchedFilms);\n      setIsInfoLoaded(true);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  const handleSubmit = (values, actions) => {\n    actions.setSubmitting(false);\n\n    if (values.searchQuery === '') {\n      return;\n    }\n\n    setSearchParams({ query: values.searchQuery });\n    loadSearchedFilms(values.searchQuery);\n  };\n\n  return (\n    <MoviesMain>\n      <MoviesHeader>Movies</MoviesHeader>\n      <Formik initialValues={{ searchQuery: '' }} onSubmit={handleSubmit}>\n        {({ isSubmitting }) => (\n          <FormEl>\n            <FieldEl\n              name=\"searchQuery\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search films\"\n            />\n            <MoviesButton type=\"submit\" disabled={isSubmitting}>\n              Search\n            </MoviesButton>\n          </FormEl>\n        )}\n      </Formik>\n      {searchedFilms.length === 0 &&\n        searchParams.get('query') &&\n        isInfoLoaded && <InfoHeader>No films for this query :(</InfoHeader>}\n\n      <MovieList films={searchedFilms} />\n    </MoviesMain>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd2c21f22a2d4ccc40e22a6b0b1329764';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=eng`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n"],"names":["List","styled","Item","StyledLinkMovie","NavLink","films","location","useLocation","map","title","id","to","state","from","MoviesHeader","MoviesMain","FormEl","Form","FieldEl","Field","MoviesButton","InfoHeader","useState","searchedFilms","setSearchedFilms","isInfoLoaded","setIsInfoLoaded","useSearchParams","searchParams","setSearchParams","loadSearchedFilms","value","API","receivedSearchedFilms","console","log","message","useEffect","query","get","initialValues","searchQuery","onSubmit","values","actions","setSubmitting","isSubmitting","name","type","autoComplete","autoFocus","placeholder","disabled","length","MovieList","BASE_URL","KEY","getPopularMovies","axios","response","data","results","getMovieByQuery","getMovieById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}